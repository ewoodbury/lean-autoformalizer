{"id":"nat_add_comm","topic":"algebra.basic","english":{"statement":"For all natural numbers a and b, a + b = b + a.","steps":["We use commutativity of addition on naturals."]},"lean":{"imports":[],"theorem":"theorem nat_add_comm (a b : Nat) : a + b = b + a := Nat.add_comm a b"}}
{"id":"prop_not_not","topic":"logic.prop","english":{"statement":"For any proposition P, ¬¬P is equivalent to P.","steps":["We use the classical principle of double negation elimination."]},"lean":{"imports":[],"theorem":"theorem prop_not_not (P : Prop) : ¬¬P ↔ P := Classical.not_not"}}
{"id":"nat_add_assoc","topic":"algebra.basic","english":{"statement":"For all natural numbers a, b, and c, (a + b) + c = a + (b + c).","steps":["We use associativity of addition on naturals."]},"lean":{"imports":[],"theorem":"theorem nat_add_assoc (a b c : Nat) : (a + b) + c = a + (b + c) := Nat.add_assoc a b c"}}
{"id":"nat_succ_add","topic":"nat.basic","english":{"statement":"For all natural numbers a and b, (a + 1) + b = a + (b + 1).","steps":["We rewrite using successor properties and commutativity."]},"lean":{"imports":[],"theorem":"theorem nat_succ_add (a b : Nat) : (a + 1) + b = a + (b + 1) := by rw [Nat.add_assoc, Nat.add_comm 1 b]"}}
