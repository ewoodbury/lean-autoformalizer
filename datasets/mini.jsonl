{"id": "nat_zero_add", "topic": "algebra.basic", "english": {"statement": "For any natural number a, 0 + a = a.", "steps": ["We use the left identity property of zero for addition."]}, "lean": {"imports": [], "theorem": "theorem nat_zero_add (a : Nat) : 0 + a = a := Nat.zero_add a"}}
{"id": "nat_add_zero", "topic": "algebra.basic", "english": {"statement": "For any natural number a, a + 0 = a.", "steps": ["We use the right identity property of zero for addition."]}, "lean": {"imports": [], "theorem": "theorem nat_add_zero (a : Nat) : a + 0 = a := Nat.add_zero a"}}
{"id": "nat_mul_comm", "topic": "algebra.basic", "english": {"statement": "For all natural numbers a and b, a * b = b * a.", "steps": ["We use commutativity of multiplication on naturals."]}, "lean": {"imports": [], "theorem": "theorem nat_mul_comm (a b : Nat) : a * b = b * a := Nat.mul_comm a b"}}
{"id": "nat_add_comm", "topic": "algebra.basic", "english": {"statement": "For all natural numbers a and b, a + b = b + a.", "steps": ["We use commutativity of addition on naturals."]}, "lean": {"imports": [], "theorem": "theorem nat_add_comm (a b : Nat) : a + b = b + a := Nat.add_comm a b"}}
{"id": "nat_mul_assoc", "topic": "algebra.basic", "english": {"statement": "For all natural numbers a, b, and c, (a * b) * c = a * (b * c).", "steps": ["We use associativity of multiplication on naturals."]}, "lean": {"imports": [], "theorem": "theorem nat_mul_assoc (a b c : Nat) : (a * b) * c = a * (b * c) := Nat.mul_assoc a b c"}}
{"id": "nat_add_assoc", "topic": "algebra.basic", "english": {"statement": "For all natural numbers a, b, and c, (a + b) + c = a + (b + c).", "steps": ["We use associativity of addition on naturals."]}, "lean": {"imports": [], "theorem": "theorem nat_add_assoc (a b c : Nat) : (a + b) + c = a + (b + c) := Nat.add_assoc a b c"}}
{"id": "nat_one_mul_nested", "topic": "algebra.basic", "english": {"statement": "For all natural numbers a and b, 1 * (a * b) = a * b.", "steps": ["We apply the left identity of multiplication to the combined product."]}, "lean": {"imports": [], "theorem": "theorem nat_one_mul_nested (a b : Nat) : 1 * (a * b) = a * b :=\n  by simpa using Nat.one_mul (a * b)"}}
{"id": "nat_add_zero_right", "topic": "algebra.basic", "english": {"statement": "For all natural numbers a and b, (a + b) + 0 = a + b.", "steps": ["We eliminate the trailing zero using the right identity of addition."]}, "lean": {"imports": [], "theorem": "theorem nat_add_zero_right (a b : Nat) : (a + b) + 0 = a + b :=\n  by simpa using Nat.add_zero (a + b)"}}
{"id": "nat_left_distrib", "topic": "algebra.basic", "english": {"statement": "For all natural numbers a, b, and c, a * (b + c) = a * b + a * c.", "steps": ["We use left distributivity of multiplication over addition."]}, "lean": {"imports": [], "theorem": "theorem nat_left_distrib (a b c : Nat) : a * (b + c) = a * b + a * c := Nat.left_distrib a b c"}}
{"id": "nat_right_distrib", "topic": "algebra.basic", "english": {"statement": "For all natural numbers a, b, and c, (a + b) * c = a * c + b * c.", "steps": ["We use right distributivity of multiplication over addition."]}, "lean": {"imports": [], "theorem": "theorem nat_right_distrib (a b c : Nat) : (a + b) * c = a * c + b * c := Nat.right_distrib a b c"}}
{"id": "nat_add_perm3_abc_acb", "topic": "algebra.basic", "english": {"statement": "For all natural numbers a, b, and c, ((a + b) + c) = ((a + c) + b).", "steps": ["We rearrange the sum using associativity and commutativity of addition."]}, "lean": {"imports": [], "theorem": "theorem nat_add_perm3_abc_acb (a b c : Nat) : ((a + b) + c) = ((a + c) + b) := by\n  simp [Nat.add_assoc, Nat.add_comm, Nat.add_left_comm]"}}
{"id": "nat_mul_perm3_abc_acb", "topic": "algebra.basic", "english": {"statement": "For all natural numbers a, b, and c, ((a * b) * c) = ((a * c) * b).", "steps": ["We rearrange the product using associativity and commutativity of multiplication."]}, "lean": {"imports": [], "theorem": "theorem nat_mul_perm3_abc_acb (a b c : Nat) : ((a * b) * c) = ((a * c) * b) := by\n  simp [Nat.mul_assoc, Nat.mul_comm, Nat.mul_left_comm]"}}
{"id": "nat_add_two_shift", "topic": "algebra.basic", "english": {"statement": "For all natural numbers a and b, a + (b + 2) = (a + b) + 2.", "steps": ["We shift two successors across the addition into a collected form."]}, "lean": {"imports": [], "theorem": "theorem nat_add_two_shift (a b : Nat) : a + (b + 2) = (a + b) + 2 :=\n  by simp [Nat.succ_eq_add_one, Nat.add_assoc, Nat.add_comm, Nat.add_left_comm]"}}
